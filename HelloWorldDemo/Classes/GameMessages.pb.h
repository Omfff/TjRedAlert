// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMessages.proto

#ifndef PROTOBUF_GameMessages_2eproto__INCLUDED
#define PROTOBUF_GameMessages_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_GameMessages_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsGameMessageImpl();
void InitDefaultsGameMessage();
void InitDefaultsGridPointImpl();
void InitDefaultsGridPoint();
void InitDefaultsGridPathImpl();
void InitDefaultsGridPath();
void InitDefaultsGameMessageGroupImpl();
void InitDefaultsGameMessageGroup();
inline void InitDefaults() {
  InitDefaultsGameMessage();
  InitDefaultsGridPoint();
  InitDefaultsGridPath();
  InitDefaultsGameMessageGroup();
}
}  // namespace protobuf_GameMessages_2eproto
class GameMessage;
class GameMessageDefaultTypeInternal;
extern GameMessageDefaultTypeInternal _GameMessage_default_instance_;
class GameMessageGroup;
class GameMessageGroupDefaultTypeInternal;
extern GameMessageGroupDefaultTypeInternal _GameMessageGroup_default_instance_;
class GridPath;
class GridPathDefaultTypeInternal;
extern GridPathDefaultTypeInternal _GridPath_default_instance_;
class GridPoint;
class GridPointDefaultTypeInternal;
extern GridPointDefaultTypeInternal _GridPoint_default_instance_;

enum GameMessage_Cmd {
  GameMessage_Cmd_CRT = 0,
  GameMessage_Cmd_MOV = 1,
  GameMessage_Cmd_ATK = 2,
  GameMessage_Cmd_CHT = 3,
  GameMessage_Cmd_GameMessage_Cmd_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  GameMessage_Cmd_GameMessage_Cmd_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool GameMessage_Cmd_IsValid(int value);
const GameMessage_Cmd GameMessage_Cmd_Cmd_MIN = GameMessage_Cmd_CRT;
const GameMessage_Cmd GameMessage_Cmd_Cmd_MAX = GameMessage_Cmd_CHT;
const int GameMessage_Cmd_Cmd_ARRAYSIZE = GameMessage_Cmd_Cmd_MAX + 1;

const ::google::protobuf::EnumDescriptor* GameMessage_Cmd_descriptor();
inline const ::std::string& GameMessage_Cmd_Name(GameMessage_Cmd value) {
  return ::google::protobuf::internal::NameOfEnum(
    GameMessage_Cmd_descriptor(), value);
}
inline bool GameMessage_Cmd_Parse(
    const ::std::string& name, GameMessage_Cmd* value) {
  return ::google::protobuf::internal::ParseNamedEnum<GameMessage_Cmd>(
    GameMessage_Cmd_descriptor(), name, value);
}
// ===================================================================

class GameMessage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessage) */ {
 public:
  GameMessage();
  virtual ~GameMessage();

  GameMessage(const GameMessage& from);

  inline GameMessage& operator=(const GameMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameMessage(GameMessage&& from) noexcept
    : GameMessage() {
    *this = ::std::move(from);
  }

  inline GameMessage& operator=(GameMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameMessage* internal_default_instance() {
    return reinterpret_cast<const GameMessage*>(
               &_GameMessage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(GameMessage* other);
  friend void swap(GameMessage& a, GameMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameMessage* New() const PROTOBUF_FINAL { return New(NULL); }

  GameMessage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameMessage& from);
  void MergeFrom(const GameMessage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef GameMessage_Cmd Cmd;
  static const Cmd CRT =
    GameMessage_Cmd_CRT;
  static const Cmd MOV =
    GameMessage_Cmd_MOV;
  static const Cmd ATK =
    GameMessage_Cmd_ATK;
  static const Cmd CHT =
    GameMessage_Cmd_CHT;
  static inline bool Cmd_IsValid(int value) {
    return GameMessage_Cmd_IsValid(value);
  }
  static const Cmd Cmd_MIN =
    GameMessage_Cmd_Cmd_MIN;
  static const Cmd Cmd_MAX =
    GameMessage_Cmd_Cmd_MAX;
  static const int Cmd_ARRAYSIZE =
    GameMessage_Cmd_Cmd_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Cmd_descriptor() {
    return GameMessage_Cmd_descriptor();
  }
  static inline const ::std::string& Cmd_Name(Cmd value) {
    return GameMessage_Cmd_Name(value);
  }
  static inline bool Cmd_Parse(const ::std::string& name,
      Cmd* value) {
    return GameMessage_Cmd_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string chat_message = 9;
  void clear_chat_message();
  static const int kChatMessageFieldNumber = 9;
  const ::std::string& chat_message() const;
  void set_chat_message(const ::std::string& value);
  #if LANG_CXX11
  void set_chat_message(::std::string&& value);
  #endif
  void set_chat_message(const char* value);
  void set_chat_message(const char* value, size_t size);
  ::std::string* mutable_chat_message();
  ::std::string* release_chat_message();
  void set_allocated_chat_message(::std::string* chat_message);

  // .GridPoint position = 7;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 7;
  const ::GridPoint& position() const;
  ::GridPoint* release_position();
  ::GridPoint* mutable_position();
  void set_allocated_position(::GridPoint* position);

  // .GridPath path = 8;
  bool has_path() const;
  void clear_path();
  static const int kPathFieldNumber = 8;
  const ::GridPath& path() const;
  ::GridPath* release_path();
  ::GridPath* mutable_path();
  void set_allocated_path(::GridPath* path);

  // .GameMessage.Cmd cmd = 1;
  void clear_cmd();
  static const int kCmdFieldNumber = 1;
  ::GameMessage_Cmd cmd() const;
  void set_cmd(::GameMessage_Cmd value);

  // int32 unit_id1 = 2;
  void clear_unit_id1();
  static const int kUnitId1FieldNumber = 2;
  ::google::protobuf::int32 unit_id1() const;
  void set_unit_id1(::google::protobuf::int32 value);

  // int32 unit_id2 = 3;
  void clear_unit_id2();
  static const int kUnitId2FieldNumber = 3;
  ::google::protobuf::int32 unit_id2() const;
  void set_unit_id2(::google::protobuf::int32 value);

  // int32 camp = 4;
  void clear_camp();
  static const int kCampFieldNumber = 4;
  ::google::protobuf::int32 camp() const;
  void set_camp(::google::protobuf::int32 value);

  // int32 unit_type = 5;
  void clear_unit_type();
  static const int kUnitTypeFieldNumber = 5;
  ::google::protobuf::int32 unit_type() const;
  void set_unit_type(::google::protobuf::int32 value);

  // int32 damage = 6;
  void clear_damage();
  static const int kDamageFieldNumber = 6;
  ::google::protobuf::int32 damage() const;
  void set_damage(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GameMessage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr chat_message_;
  ::GridPoint* position_;
  ::GridPath* path_;
  int cmd_;
  ::google::protobuf::int32 unit_id1_;
  ::google::protobuf::int32 unit_id2_;
  ::google::protobuf::int32 camp_;
  ::google::protobuf::int32 unit_type_;
  ::google::protobuf::int32 damage_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessages_2eproto::TableStruct;
  friend void ::protobuf_GameMessages_2eproto::InitDefaultsGameMessageImpl();
};
// -------------------------------------------------------------------

class GridPoint : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GridPoint) */ {
 public:
  GridPoint();
  virtual ~GridPoint();

  GridPoint(const GridPoint& from);

  inline GridPoint& operator=(const GridPoint& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GridPoint(GridPoint&& from) noexcept
    : GridPoint() {
    *this = ::std::move(from);
  }

  inline GridPoint& operator=(GridPoint&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GridPoint& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GridPoint* internal_default_instance() {
    return reinterpret_cast<const GridPoint*>(
               &_GridPoint_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(GridPoint* other);
  friend void swap(GridPoint& a, GridPoint& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GridPoint* New() const PROTOBUF_FINAL { return New(NULL); }

  GridPoint* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GridPoint& from);
  void MergeFrom(const GridPoint& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GridPoint* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 x = 1;
  void clear_x();
  static const int kXFieldNumber = 1;
  ::google::protobuf::int32 x() const;
  void set_x(::google::protobuf::int32 value);

  // int32 y = 2;
  void clear_y();
  static const int kYFieldNumber = 2;
  ::google::protobuf::int32 y() const;
  void set_y(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:GridPoint)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 x_;
  ::google::protobuf::int32 y_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessages_2eproto::TableStruct;
  friend void ::protobuf_GameMessages_2eproto::InitDefaultsGridPointImpl();
};
// -------------------------------------------------------------------

class GridPath : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GridPath) */ {
 public:
  GridPath();
  virtual ~GridPath();

  GridPath(const GridPath& from);

  inline GridPath& operator=(const GridPath& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GridPath(GridPath&& from) noexcept
    : GridPath() {
    *this = ::std::move(from);
  }

  inline GridPath& operator=(GridPath&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GridPath& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GridPath* internal_default_instance() {
    return reinterpret_cast<const GridPath*>(
               &_GridPath_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GridPath* other);
  friend void swap(GridPath& a, GridPath& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GridPath* New() const PROTOBUF_FINAL { return New(NULL); }

  GridPath* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GridPath& from);
  void MergeFrom(const GridPath& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GridPath* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GridPoint path_point = 1;
  int path_point_size() const;
  void clear_path_point();
  static const int kPathPointFieldNumber = 1;
  const ::GridPoint& path_point(int index) const;
  ::GridPoint* mutable_path_point(int index);
  ::GridPoint* add_path_point();
  ::google::protobuf::RepeatedPtrField< ::GridPoint >*
      mutable_path_point();
  const ::google::protobuf::RepeatedPtrField< ::GridPoint >&
      path_point() const;

  // @@protoc_insertion_point(class_scope:GridPath)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::GridPoint > path_point_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessages_2eproto::TableStruct;
  friend void ::protobuf_GameMessages_2eproto::InitDefaultsGridPathImpl();
};
// -------------------------------------------------------------------

class GameMessageGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameMessageGroup) */ {
 public:
  GameMessageGroup();
  virtual ~GameMessageGroup();

  GameMessageGroup(const GameMessageGroup& from);

  inline GameMessageGroup& operator=(const GameMessageGroup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GameMessageGroup(GameMessageGroup&& from) noexcept
    : GameMessageGroup() {
    *this = ::std::move(from);
  }

  inline GameMessageGroup& operator=(GameMessageGroup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GameMessageGroup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GameMessageGroup* internal_default_instance() {
    return reinterpret_cast<const GameMessageGroup*>(
               &_GameMessageGroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(GameMessageGroup* other);
  friend void swap(GameMessageGroup& a, GameMessageGroup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GameMessageGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  GameMessageGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameMessageGroup& from);
  void MergeFrom(const GameMessageGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameMessageGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .GameMessage game_message = 1;
  int game_message_size() const;
  void clear_game_message();
  static const int kGameMessageFieldNumber = 1;
  const ::GameMessage& game_message(int index) const;
  ::GameMessage* mutable_game_message(int index);
  ::GameMessage* add_game_message();
  ::google::protobuf::RepeatedPtrField< ::GameMessage >*
      mutable_game_message();
  const ::google::protobuf::RepeatedPtrField< ::GameMessage >&
      game_message() const;

  // @@protoc_insertion_point(class_scope:GameMessageGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::GameMessage > game_message_;
  mutable int _cached_size_;
  friend struct ::protobuf_GameMessages_2eproto::TableStruct;
  friend void ::protobuf_GameMessages_2eproto::InitDefaultsGameMessageGroupImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// GameMessage

// .GameMessage.Cmd cmd = 1;
inline void GameMessage::clear_cmd() {
  cmd_ = 0;
}
inline ::GameMessage_Cmd GameMessage::cmd() const {
  // @@protoc_insertion_point(field_get:GameMessage.cmd)
  return static_cast< ::GameMessage_Cmd >(cmd_);
}
inline void GameMessage::set_cmd(::GameMessage_Cmd value) {
  
  cmd_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.cmd)
}

// int32 unit_id1 = 2;
inline void GameMessage::clear_unit_id1() {
  unit_id1_ = 0;
}
inline ::google::protobuf::int32 GameMessage::unit_id1() const {
  // @@protoc_insertion_point(field_get:GameMessage.unit_id1)
  return unit_id1_;
}
inline void GameMessage::set_unit_id1(::google::protobuf::int32 value) {
  
  unit_id1_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.unit_id1)
}

// int32 unit_id2 = 3;
inline void GameMessage::clear_unit_id2() {
  unit_id2_ = 0;
}
inline ::google::protobuf::int32 GameMessage::unit_id2() const {
  // @@protoc_insertion_point(field_get:GameMessage.unit_id2)
  return unit_id2_;
}
inline void GameMessage::set_unit_id2(::google::protobuf::int32 value) {
  
  unit_id2_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.unit_id2)
}

// int32 camp = 4;
inline void GameMessage::clear_camp() {
  camp_ = 0;
}
inline ::google::protobuf::int32 GameMessage::camp() const {
  // @@protoc_insertion_point(field_get:GameMessage.camp)
  return camp_;
}
inline void GameMessage::set_camp(::google::protobuf::int32 value) {
  
  camp_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.camp)
}

// int32 unit_type = 5;
inline void GameMessage::clear_unit_type() {
  unit_type_ = 0;
}
inline ::google::protobuf::int32 GameMessage::unit_type() const {
  // @@protoc_insertion_point(field_get:GameMessage.unit_type)
  return unit_type_;
}
inline void GameMessage::set_unit_type(::google::protobuf::int32 value) {
  
  unit_type_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.unit_type)
}

// int32 damage = 6;
inline void GameMessage::clear_damage() {
  damage_ = 0;
}
inline ::google::protobuf::int32 GameMessage::damage() const {
  // @@protoc_insertion_point(field_get:GameMessage.damage)
  return damage_;
}
inline void GameMessage::set_damage(::google::protobuf::int32 value) {
  
  damage_ = value;
  // @@protoc_insertion_point(field_set:GameMessage.damage)
}

// .GridPoint position = 7;
inline bool GameMessage::has_position() const {
  return this != internal_default_instance() && position_ != NULL;
}
inline void GameMessage::clear_position() {
  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
}
inline const ::GridPoint& GameMessage::position() const {
  const ::GridPoint* p = position_;
  // @@protoc_insertion_point(field_get:GameMessage.position)
  return p != NULL ? *p : *reinterpret_cast<const ::GridPoint*>(
      &::_GridPoint_default_instance_);
}
inline ::GridPoint* GameMessage::release_position() {
  // @@protoc_insertion_point(field_release:GameMessage.position)
  
  ::GridPoint* temp = position_;
  position_ = NULL;
  return temp;
}
inline ::GridPoint* GameMessage::mutable_position() {
  
  if (position_ == NULL) {
    position_ = new ::GridPoint;
  }
  // @@protoc_insertion_point(field_mutable:GameMessage.position)
  return position_;
}
inline void GameMessage::set_allocated_position(::GridPoint* position) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete position_;
  }
  if (position) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      position = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, position, submessage_arena);
    }
    
  } else {
    
  }
  position_ = position;
  // @@protoc_insertion_point(field_set_allocated:GameMessage.position)
}

// .GridPath path = 8;
inline bool GameMessage::has_path() const {
  return this != internal_default_instance() && path_ != NULL;
}
inline void GameMessage::clear_path() {
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
}
inline const ::GridPath& GameMessage::path() const {
  const ::GridPath* p = path_;
  // @@protoc_insertion_point(field_get:GameMessage.path)
  return p != NULL ? *p : *reinterpret_cast<const ::GridPath*>(
      &::_GridPath_default_instance_);
}
inline ::GridPath* GameMessage::release_path() {
  // @@protoc_insertion_point(field_release:GameMessage.path)
  
  ::GridPath* temp = path_;
  path_ = NULL;
  return temp;
}
inline ::GridPath* GameMessage::mutable_path() {
  
  if (path_ == NULL) {
    path_ = new ::GridPath;
  }
  // @@protoc_insertion_point(field_mutable:GameMessage.path)
  return path_;
}
inline void GameMessage::set_allocated_path(::GridPath* path) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete path_;
  }
  if (path) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      path = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, path, submessage_arena);
    }
    
  } else {
    
  }
  path_ = path;
  // @@protoc_insertion_point(field_set_allocated:GameMessage.path)
}

// string chat_message = 9;
inline void GameMessage::clear_chat_message() {
  chat_message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GameMessage::chat_message() const {
  // @@protoc_insertion_point(field_get:GameMessage.chat_message)
  return chat_message_.GetNoArena();
}
inline void GameMessage::set_chat_message(const ::std::string& value) {
  
  chat_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:GameMessage.chat_message)
}
#if LANG_CXX11
inline void GameMessage::set_chat_message(::std::string&& value) {
  
  chat_message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:GameMessage.chat_message)
}
#endif
inline void GameMessage::set_chat_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  chat_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:GameMessage.chat_message)
}
inline void GameMessage::set_chat_message(const char* value, size_t size) {
  
  chat_message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:GameMessage.chat_message)
}
inline ::std::string* GameMessage::mutable_chat_message() {
  
  // @@protoc_insertion_point(field_mutable:GameMessage.chat_message)
  return chat_message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GameMessage::release_chat_message() {
  // @@protoc_insertion_point(field_release:GameMessage.chat_message)
  
  return chat_message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GameMessage::set_allocated_chat_message(::std::string* chat_message) {
  if (chat_message != NULL) {
    
  } else {
    
  }
  chat_message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), chat_message);
  // @@protoc_insertion_point(field_set_allocated:GameMessage.chat_message)
}

// -------------------------------------------------------------------

// GridPoint

// int32 x = 1;
inline void GridPoint::clear_x() {
  x_ = 0;
}
inline ::google::protobuf::int32 GridPoint::x() const {
  // @@protoc_insertion_point(field_get:GridPoint.x)
  return x_;
}
inline void GridPoint::set_x(::google::protobuf::int32 value) {
  
  x_ = value;
  // @@protoc_insertion_point(field_set:GridPoint.x)
}

// int32 y = 2;
inline void GridPoint::clear_y() {
  y_ = 0;
}
inline ::google::protobuf::int32 GridPoint::y() const {
  // @@protoc_insertion_point(field_get:GridPoint.y)
  return y_;
}
inline void GridPoint::set_y(::google::protobuf::int32 value) {
  
  y_ = value;
  // @@protoc_insertion_point(field_set:GridPoint.y)
}

// -------------------------------------------------------------------

// GridPath

// repeated .GridPoint path_point = 1;
inline int GridPath::path_point_size() const {
  return path_point_.size();
}
inline void GridPath::clear_path_point() {
  path_point_.Clear();
}
inline const ::GridPoint& GridPath::path_point(int index) const {
  // @@protoc_insertion_point(field_get:GridPath.path_point)
  return path_point_.Get(index);
}
inline ::GridPoint* GridPath::mutable_path_point(int index) {
  // @@protoc_insertion_point(field_mutable:GridPath.path_point)
  return path_point_.Mutable(index);
}
inline ::GridPoint* GridPath::add_path_point() {
  // @@protoc_insertion_point(field_add:GridPath.path_point)
  return path_point_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GridPoint >*
GridPath::mutable_path_point() {
  // @@protoc_insertion_point(field_mutable_list:GridPath.path_point)
  return &path_point_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GridPoint >&
GridPath::path_point() const {
  // @@protoc_insertion_point(field_list:GridPath.path_point)
  return path_point_;
}

// -------------------------------------------------------------------

// GameMessageGroup

// repeated .GameMessage game_message = 1;
inline int GameMessageGroup::game_message_size() const {
  return game_message_.size();
}
inline void GameMessageGroup::clear_game_message() {
  game_message_.Clear();
}
inline const ::GameMessage& GameMessageGroup::game_message(int index) const {
  // @@protoc_insertion_point(field_get:GameMessageGroup.game_message)
  return game_message_.Get(index);
}
inline ::GameMessage* GameMessageGroup::mutable_game_message(int index) {
  // @@protoc_insertion_point(field_mutable:GameMessageGroup.game_message)
  return game_message_.Mutable(index);
}
inline ::GameMessage* GameMessageGroup::add_game_message() {
  // @@protoc_insertion_point(field_add:GameMessageGroup.game_message)
  return game_message_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::GameMessage >*
GameMessageGroup::mutable_game_message() {
  // @@protoc_insertion_point(field_mutable_list:GameMessageGroup.game_message)
  return &game_message_;
}
inline const ::google::protobuf::RepeatedPtrField< ::GameMessage >&
GameMessageGroup::game_message() const {
  // @@protoc_insertion_point(field_list:GameMessageGroup.game_message)
  return game_message_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::GameMessage_Cmd> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::GameMessage_Cmd>() {
  return ::GameMessage_Cmd_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameMessages_2eproto__INCLUDED
