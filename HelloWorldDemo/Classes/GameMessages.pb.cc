// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameMessages.proto

#include "GameMessages.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class GameMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameMessage>
      _instance;
} _GameMessage_default_instance_;
class GridPointDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GridPoint>
      _instance;
} _GridPoint_default_instance_;
class GridPathDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GridPath>
      _instance;
} _GridPath_default_instance_;
class GameMessageGroupDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GameMessageGroup>
      _instance;
} _GameMessageGroup_default_instance_;
namespace protobuf_GameMessages_2eproto {
void InitDefaultsGameMessageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_GameMessages_2eproto::InitDefaultsGridPoint();
  protobuf_GameMessages_2eproto::InitDefaultsGridPath();
  {
    void* ptr = &::_GameMessage_default_instance_;
    new (ptr) ::GameMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMessage::InitAsDefaultInstance();
}

void InitDefaultsGameMessage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameMessageImpl);
}

void InitDefaultsGridPointImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_GridPoint_default_instance_;
    new (ptr) ::GridPoint();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GridPoint::InitAsDefaultInstance();
}

void InitDefaultsGridPoint() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGridPointImpl);
}

void InitDefaultsGridPathImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_GameMessages_2eproto::InitDefaultsGridPoint();
  {
    void* ptr = &::_GridPath_default_instance_;
    new (ptr) ::GridPath();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GridPath::InitAsDefaultInstance();
}

void InitDefaultsGridPath() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGridPathImpl);
}

void InitDefaultsGameMessageGroupImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_GameMessages_2eproto::InitDefaultsGameMessage();
  {
    void* ptr = &::_GameMessageGroup_default_instance_;
    new (ptr) ::GameMessageGroup();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::GameMessageGroup::InitAsDefaultInstance();
}

void InitDefaultsGameMessageGroup() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsGameMessageGroupImpl);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, cmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, unit_id1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, unit_id2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, camp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, unit_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, damage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessage, path_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GridPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GridPoint, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GridPoint, y_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GridPath, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GridPath, path_point_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessageGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::GameMessageGroup, game_message_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::GameMessage)},
  { 13, -1, sizeof(::GridPoint)},
  { 20, -1, sizeof(::GridPath)},
  { 26, -1, sizeof(::GameMessageGroup)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GameMessage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GridPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GridPath_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_GameMessageGroup_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "GameMessages.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\022GameMessages.proto\"\332\001\n\013GameMessage\022\035\n\003"
      "cmd\030\001 \001(\0162\020.GameMessage.Cmd\022\020\n\010unit_id1\030"
      "\002 \001(\005\022\020\n\010unit_id2\030\003 \001(\005\022\014\n\004camp\030\004 \001(\005\022\021\n"
      "\tunit_type\030\005 \001(\005\022\016\n\006damage\030\006 \001(\005\022\034\n\010posi"
      "tion\030\007 \001(\0132\n.GridPoint\022\027\n\004path\030\010 \001(\0132\t.G"
      "ridPath\" \n\003Cmd\022\007\n\003CRT\020\000\022\007\n\003MOV\020\001\022\007\n\003ATK\020"
      "\002\"!\n\tGridPoint\022\t\n\001x\030\001 \001(\005\022\t\n\001y\030\002 \001(\005\"*\n\010"
      "GridPath\022\036\n\npath_point\030\001 \003(\0132\n.GridPoint"
      "\"6\n\020GameMessageGroup\022\"\n\014game_message\030\001 \003"
      "(\0132\014.GameMessageb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 384);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "GameMessages.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_GameMessages_2eproto
const ::google::protobuf::EnumDescriptor* GameMessage_Cmd_descriptor() {
  protobuf_GameMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_GameMessages_2eproto::file_level_enum_descriptors[0];
}
bool GameMessage_Cmd_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const GameMessage_Cmd GameMessage::CRT;
const GameMessage_Cmd GameMessage::MOV;
const GameMessage_Cmd GameMessage::ATK;
const GameMessage_Cmd GameMessage::Cmd_MIN;
const GameMessage_Cmd GameMessage::Cmd_MAX;
const int GameMessage::Cmd_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void GameMessage::InitAsDefaultInstance() {
  ::_GameMessage_default_instance_._instance.get_mutable()->position_ = const_cast< ::GridPoint*>(
      ::GridPoint::internal_default_instance());
  ::_GameMessage_default_instance_._instance.get_mutable()->path_ = const_cast< ::GridPath*>(
      ::GridPath::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameMessage::kCmdFieldNumber;
const int GameMessage::kUnitId1FieldNumber;
const int GameMessage::kUnitId2FieldNumber;
const int GameMessage::kCampFieldNumber;
const int GameMessage::kUnitTypeFieldNumber;
const int GameMessage::kDamageFieldNumber;
const int GameMessage::kPositionFieldNumber;
const int GameMessage::kPathFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameMessage::GameMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessages_2eproto::InitDefaultsGameMessage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMessage)
}
GameMessage::GameMessage(const GameMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::GridPoint(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_path()) {
    path_ = new ::GridPath(*from.path_);
  } else {
    path_ = NULL;
  }
  ::memcpy(&cmd_, &from.cmd_,
    static_cast<size_t>(reinterpret_cast<char*>(&damage_) -
    reinterpret_cast<char*>(&cmd_)) + sizeof(damage_));
  // @@protoc_insertion_point(copy_constructor:GameMessage)
}

void GameMessage::SharedCtor() {
  ::memset(&position_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&damage_) -
      reinterpret_cast<char*>(&position_)) + sizeof(damage_));
  _cached_size_ = 0;
}

GameMessage::~GameMessage() {
  // @@protoc_insertion_point(destructor:GameMessage)
  SharedDtor();
}

void GameMessage::SharedDtor() {
  if (this != internal_default_instance()) delete position_;
  if (this != internal_default_instance()) delete path_;
}

void GameMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameMessage::descriptor() {
  ::protobuf_GameMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameMessage& GameMessage::default_instance() {
  ::protobuf_GameMessages_2eproto::InitDefaultsGameMessage();
  return *internal_default_instance();
}

GameMessage* GameMessage::New(::google::protobuf::Arena* arena) const {
  GameMessage* n = new GameMessage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && position_ != NULL) {
    delete position_;
  }
  position_ = NULL;
  if (GetArenaNoVirtual() == NULL && path_ != NULL) {
    delete path_;
  }
  path_ = NULL;
  ::memset(&cmd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&damage_) -
      reinterpret_cast<char*>(&cmd_)) + sizeof(damage_));
  _internal_metadata_.Clear();
}

bool GameMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .GameMessage.Cmd cmd = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_cmd(static_cast< ::GameMessage_Cmd >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 unit_id1 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_id1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 unit_id2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_id2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 camp = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &camp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 unit_type = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &unit_type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 damage = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &damage_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GridPoint position = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .GridPath path = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_path()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMessage)
  return false;
#undef DO_
}

void GameMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GameMessage.Cmd cmd = 1;
  if (this->cmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cmd(), output);
  }

  // int32 unit_id1 = 2;
  if (this->unit_id1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->unit_id1(), output);
  }

  // int32 unit_id2 = 3;
  if (this->unit_id2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->unit_id2(), output);
  }

  // int32 camp = 4;
  if (this->camp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->camp(), output);
  }

  // int32 unit_type = 5;
  if (this->unit_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->unit_type(), output);
  }

  // int32 damage = 6;
  if (this->damage() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->damage(), output);
  }

  // .GridPoint position = 7;
  if (this->has_position()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->position_, output);
  }

  // .GridPath path = 8;
  if (this->has_path()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->path_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMessage)
}

::google::protobuf::uint8* GameMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .GameMessage.Cmd cmd = 1;
  if (this->cmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cmd(), target);
  }

  // int32 unit_id1 = 2;
  if (this->unit_id1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->unit_id1(), target);
  }

  // int32 unit_id2 = 3;
  if (this->unit_id2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->unit_id2(), target);
  }

  // int32 camp = 4;
  if (this->camp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->camp(), target);
  }

  // int32 unit_type = 5;
  if (this->unit_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->unit_type(), target);
  }

  // int32 damage = 6;
  if (this->damage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->damage(), target);
  }

  // .GridPoint position = 7;
  if (this->has_position()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *this->position_, deterministic, target);
  }

  // .GridPath path = 8;
  if (this->has_path()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, *this->path_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMessage)
  return target;
}

size_t GameMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .GridPoint position = 7;
  if (this->has_position()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->position_);
  }

  // .GridPath path = 8;
  if (this->has_path()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->path_);
  }

  // .GameMessage.Cmd cmd = 1;
  if (this->cmd() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->cmd());
  }

  // int32 unit_id1 = 2;
  if (this->unit_id1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit_id1());
  }

  // int32 unit_id2 = 3;
  if (this->unit_id2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit_id2());
  }

  // int32 camp = 4;
  if (this->camp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->camp());
  }

  // int32 unit_type = 5;
  if (this->unit_type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->unit_type());
  }

  // int32 damage = 6;
  if (this->damage() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->damage());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const GameMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMessage)
    MergeFrom(*source);
  }
}

void GameMessage::MergeFrom(const GameMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_position()) {
    mutable_position()->::GridPoint::MergeFrom(from.position());
  }
  if (from.has_path()) {
    mutable_path()->::GridPath::MergeFrom(from.path());
  }
  if (from.cmd() != 0) {
    set_cmd(from.cmd());
  }
  if (from.unit_id1() != 0) {
    set_unit_id1(from.unit_id1());
  }
  if (from.unit_id2() != 0) {
    set_unit_id2(from.unit_id2());
  }
  if (from.camp() != 0) {
    set_camp(from.camp());
  }
  if (from.unit_type() != 0) {
    set_unit_type(from.unit_type());
  }
  if (from.damage() != 0) {
    set_damage(from.damage());
  }
}

void GameMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameMessage::CopyFrom(const GameMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameMessage::IsInitialized() const {
  return true;
}

void GameMessage::Swap(GameMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameMessage::InternalSwap(GameMessage* other) {
  using std::swap;
  swap(position_, other->position_);
  swap(path_, other->path_);
  swap(cmd_, other->cmd_);
  swap(unit_id1_, other->unit_id1_);
  swap(unit_id2_, other->unit_id2_);
  swap(camp_, other->camp_);
  swap(unit_type_, other->unit_type_);
  swap(damage_, other->damage_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameMessage::GetMetadata() const {
  protobuf_GameMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GridPoint::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GridPoint::kXFieldNumber;
const int GridPoint::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GridPoint::GridPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessages_2eproto::InitDefaultsGridPoint();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GridPoint)
}
GridPoint::GridPoint(const GridPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&y_) -
    reinterpret_cast<char*>(&x_)) + sizeof(y_));
  // @@protoc_insertion_point(copy_constructor:GridPoint)
}

void GridPoint::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _cached_size_ = 0;
}

GridPoint::~GridPoint() {
  // @@protoc_insertion_point(destructor:GridPoint)
  SharedDtor();
}

void GridPoint::SharedDtor() {
}

void GridPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GridPoint::descriptor() {
  ::protobuf_GameMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GridPoint& GridPoint::default_instance() {
  ::protobuf_GameMessages_2eproto::InitDefaultsGridPoint();
  return *internal_default_instance();
}

GridPoint* GridPoint::New(::google::protobuf::Arena* arena) const {
  GridPoint* n = new GridPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GridPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:GridPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&y_) -
      reinterpret_cast<char*>(&x_)) + sizeof(y_));
  _internal_metadata_.Clear();
}

bool GridPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GridPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &x_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &y_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GridPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GridPoint)
  return false;
#undef DO_
}

void GridPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GridPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->x(), output);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->y(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GridPoint)
}

::google::protobuf::uint8* GridPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GridPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 x = 1;
  if (this->x() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->x(), target);
  }

  // int32 y = 2;
  if (this->y() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->y(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GridPoint)
  return target;
}

size_t GridPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GridPoint)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 x = 1;
  if (this->x() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->x());
  }

  // int32 y = 2;
  if (this->y() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->y());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GridPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GridPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const GridPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GridPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GridPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GridPoint)
    MergeFrom(*source);
  }
}

void GridPoint::MergeFrom(const GridPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GridPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.x() != 0) {
    set_x(from.x());
  }
  if (from.y() != 0) {
    set_y(from.y());
  }
}

void GridPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GridPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GridPoint::CopyFrom(const GridPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GridPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GridPoint::IsInitialized() const {
  return true;
}

void GridPoint::Swap(GridPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GridPoint::InternalSwap(GridPoint* other) {
  using std::swap;
  swap(x_, other->x_);
  swap(y_, other->y_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GridPoint::GetMetadata() const {
  protobuf_GameMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GridPath::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GridPath::kPathPointFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GridPath::GridPath()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessages_2eproto::InitDefaultsGridPath();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GridPath)
}
GridPath::GridPath(const GridPath& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      path_point_(from.path_point_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GridPath)
}

void GridPath::SharedCtor() {
  _cached_size_ = 0;
}

GridPath::~GridPath() {
  // @@protoc_insertion_point(destructor:GridPath)
  SharedDtor();
}

void GridPath::SharedDtor() {
}

void GridPath::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GridPath::descriptor() {
  ::protobuf_GameMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GridPath& GridPath::default_instance() {
  ::protobuf_GameMessages_2eproto::InitDefaultsGridPath();
  return *internal_default_instance();
}

GridPath* GridPath::New(::google::protobuf::Arena* arena) const {
  GridPath* n = new GridPath;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GridPath::Clear() {
// @@protoc_insertion_point(message_clear_start:GridPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_point_.Clear();
  _internal_metadata_.Clear();
}

bool GridPath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GridPath)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .GridPoint path_point = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_path_point()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GridPath)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GridPath)
  return false;
#undef DO_
}

void GridPath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GridPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GridPoint path_point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_point_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->path_point(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GridPath)
}

::google::protobuf::uint8* GridPath::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GridPath)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GridPoint path_point = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->path_point_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->path_point(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GridPath)
  return target;
}

size_t GridPath::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GridPath)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GridPoint path_point = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->path_point_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->path_point(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GridPath::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GridPath)
  GOOGLE_DCHECK_NE(&from, this);
  const GridPath* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GridPath>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GridPath)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GridPath)
    MergeFrom(*source);
  }
}

void GridPath::MergeFrom(const GridPath& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GridPath)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  path_point_.MergeFrom(from.path_point_);
}

void GridPath::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GridPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GridPath::CopyFrom(const GridPath& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GridPath)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GridPath::IsInitialized() const {
  return true;
}

void GridPath::Swap(GridPath* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GridPath::InternalSwap(GridPath* other) {
  using std::swap;
  path_point_.InternalSwap(&other->path_point_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GridPath::GetMetadata() const {
  protobuf_GameMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GameMessageGroup::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameMessageGroup::kGameMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameMessageGroup::GameMessageGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_GameMessages_2eproto::InitDefaultsGameMessageGroup();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:GameMessageGroup)
}
GameMessageGroup::GameMessageGroup(const GameMessageGroup& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      game_message_(from.game_message_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:GameMessageGroup)
}

void GameMessageGroup::SharedCtor() {
  _cached_size_ = 0;
}

GameMessageGroup::~GameMessageGroup() {
  // @@protoc_insertion_point(destructor:GameMessageGroup)
  SharedDtor();
}

void GameMessageGroup::SharedDtor() {
}

void GameMessageGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameMessageGroup::descriptor() {
  ::protobuf_GameMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessages_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameMessageGroup& GameMessageGroup::default_instance() {
  ::protobuf_GameMessages_2eproto::InitDefaultsGameMessageGroup();
  return *internal_default_instance();
}

GameMessageGroup* GameMessageGroup::New(::google::protobuf::Arena* arena) const {
  GameMessageGroup* n = new GameMessageGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameMessageGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:GameMessageGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  game_message_.Clear();
  _internal_metadata_.Clear();
}

bool GameMessageGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:GameMessageGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .GameMessage game_message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_game_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:GameMessageGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:GameMessageGroup)
  return false;
#undef DO_
}

void GameMessageGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:GameMessageGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GameMessage game_message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->game_message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->game_message(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:GameMessageGroup)
}

::google::protobuf::uint8* GameMessageGroup::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:GameMessageGroup)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .GameMessage game_message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->game_message_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->game_message(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:GameMessageGroup)
  return target;
}

size_t GameMessageGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:GameMessageGroup)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .GameMessage game_message = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->game_message_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->game_message(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameMessageGroup::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:GameMessageGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const GameMessageGroup* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameMessageGroup>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:GameMessageGroup)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:GameMessageGroup)
    MergeFrom(*source);
  }
}

void GameMessageGroup::MergeFrom(const GameMessageGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:GameMessageGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  game_message_.MergeFrom(from.game_message_);
}

void GameMessageGroup::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:GameMessageGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameMessageGroup::CopyFrom(const GameMessageGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:GameMessageGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameMessageGroup::IsInitialized() const {
  return true;
}

void GameMessageGroup::Swap(GameMessageGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameMessageGroup::InternalSwap(GameMessageGroup* other) {
  using std::swap;
  game_message_.InternalSwap(&other->game_message_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameMessageGroup::GetMetadata() const {
  protobuf_GameMessages_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_GameMessages_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
